{
  "hash": "4b16a572e2a0466c7fe8907734c8d060",
  "result": {
    "markdown": "# Regressionsmodelle: Erweiterungen\n\n\n\n\n\nNach den basics für Regressionsmodelle sehen wir uns in diesem Kapitel einige hilfreiche Erweiterungen von Regressionsmodellen in R an.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ndat1 <- data.frame(id   = 1:8,\n                   var1 = c(2,1,2,5,7, 8, 9,5),\n                   var2 = c(2,2,1,9,7, 4,25,3),\n                   educ = c(3,1,2,2,1, 3, 2,-1),\n                   gend = c(2,1,1,2,1,2,1,2),\n                   x    = c(2,1,2,4,1,NA,NA,NA) )\ndat1$ed_fct <- factor(dat1$educ, levels = 1:3,\n                        labels = c(\"basic\",\"medium\",\"high\"))\ndat1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id var1 var2 educ gend  x ed_fct\n1  1    2    2    3    2  2   high\n2  2    1    2    1    1  1  basic\n3  3    2    1    2    1  2 medium\n4  4    5    9    2    2  4 medium\n5  5    7    7    1    1  1  basic\n6  6    8    4    3    2 NA   high\n7  7    9   25    2    1 NA medium\n8  8    5    3   -1    2 NA   <NA>\n```\n:::\n:::\n\n\n\n+ [vollständige Zeilen mit `complete.cases()`](#complcses) -> `e(sample)` in Stata\n+ [Interaktionen](#inter) -> `c.var1##c.var2` in Stata\n+ [Quadratische Terme](#quad) -> `c.var1##c.var1` in Stata\n+ [Gewichte anwenden](#gew) \n+ [Robuste Standardfehler](#rbst)\n+ [Fixed Effects Modelle](#fe)\n+ [Mehrebenenmodelle](#mlvl)\n\n## Nur vollständige Zeilen behalten {#complcses}\n\nWenn wir die beiden Modelle `m1` und `m3` vergleichen, sehen wir unterschiedliche Fallzahlen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- lm(var2~ var1, data = dat1)  \nm4 <- lm(var2 ~ ed_fct  + var1, dat1)\nmodelsummary(list(\"m1\"=m1,\"m4\"=m4),gof_omit = \"IC|RM|Log|F\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:center;\"> m1 </th>\n   <th style=\"text-align:center;\">  m4 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:center;\"> -2.340 </td>\n   <td style=\"text-align:center;\"> -2.511 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (4.345) </td>\n   <td style=\"text-align:center;\"> (5.681) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> var1 </td>\n   <td style=\"text-align:center;\"> 1.839 </td>\n   <td style=\"text-align:center;\"> 1.753 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (0.773) </td>\n   <td style=\"text-align:center;\"> (0.835) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ed_fctmedium </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> 4.830 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> (6.038) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ed_fcthigh </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> -3.253 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;box-shadow: 0px 1px\">  </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\">  </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (6.554) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Num.Obs. </td>\n   <td style=\"text-align:center;\"> 8 </td>\n   <td style=\"text-align:center;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 </td>\n   <td style=\"text-align:center;\"> 0.486 </td>\n   <td style=\"text-align:center;\"> 0.700 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 Adj. </td>\n   <td style=\"text-align:center;\"> 0.400 </td>\n   <td style=\"text-align:center;\"> 0.400 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nEs zeigt sich, dass in Modell `m4` mit `edu_fct` 1 Fall verloren geht. Woran liegt das?\nDazu lohnt sich ein Blick in die Daten:\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id var1 var2 educ gend  x ed_fct\n1  1    2    2    3    2  2   high\n2  2    1    2    1    1  1  basic\n3  3    2    1    2    1  2 medium\n4  4    5    9    2    2  4 medium\n5  5    7    7    1    1  1  basic\n6  6    8    4    3    2 NA   high\n7  7    9   25    2    1 NA medium\n8  8    5    3   -1    2 NA   <NA>\n```\n:::\n:::\n\n\nDie Angabe für `ed_fct` fehlt in für `id` = 8.\n\nUm die Modelle zu vergleichen sollten wir also nur die Zeilen verwenden, für die auch die Werte für `ed_fct` vorliegen.\nHier können wir diese Zeilen per Hand auswählen (und `id`=8 ausschließen), in größeren Datensätzen ist das aber mühsam.\n\n### `complete.cases()`\n\nHier hilft uns `complete.cases()`.\nDiese Funktion erstellt eine logische Variable, welche ein `TRUE` für alle vollständigen Fälle (also ohne ein `NA`). \nUnvollständige Fälle werden mit einem `FALSE` versehen. \nDazu geben wir an, welche Variablen jeweils für diese Betrachtung berücksichtigt werden sollen und legen die Variable einfach im Datensatz als neue Spalte an. \nFür Modell 1 ist ein Fall `complete`, wenn `var2` und `var1` vorliegen. \nWir wählen also mit `select()` die relevanten Variablen aus und wenden `complete.cases` auf diese Auswahl an:\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1 %>% select(var1,var2) %>% complete.cases(.) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n```\n:::\n\n```{.r .cell-code}\ndat1$compl_m1 <- dat1 %>% select(var1,var2) %>% complete.cases(.) \ndat1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id var1 var2 educ gend  x ed_fct compl_m1\n1  1    2    2    3    2  2   high     TRUE\n2  2    1    2    1    1  1  basic     TRUE\n3  3    2    1    2    1  2 medium     TRUE\n4  4    5    9    2    2  4 medium     TRUE\n5  5    7    7    1    1  1  basic     TRUE\n6  6    8    4    3    2 NA   high     TRUE\n7  7    9   25    2    1 NA medium     TRUE\n8  8    5    3   -1    2 NA   <NA>     TRUE\n```\n:::\n:::\n\n::: {.callout-warning collapse=\"true\"}\n# `complete.cases()` alleine sucht in allen Variablen nach `NA`\nAchtung: wenn wir keine Variablen angeben, werden `NA` aus allen Variablen berücksichtigt, hier also auch die `NA` aus `x` - die uns hier nicht interessieren:\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1 %>% complete.cases(.) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE\n```\n:::\n\n```{.r .cell-code}\ndat1$compl <- dat1 %>% complete.cases(.) \ndat1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id var1 var2 educ gend  x ed_fct compl_m1 compl\n1  1    2    2    3    2  2   high     TRUE  TRUE\n2  2    1    2    1    1  1  basic     TRUE  TRUE\n3  3    2    1    2    1  2 medium     TRUE  TRUE\n4  4    5    9    2    2  4 medium     TRUE  TRUE\n5  5    7    7    1    1  1  basic     TRUE  TRUE\n6  6    8    4    3    2 NA   high     TRUE FALSE\n7  7    9   25    2    1 NA medium     TRUE FALSE\n8  8    5    3   -1    2 NA   <NA>     TRUE FALSE\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n:::\n\n...das gleiche machen wir für Modell `m4`, welches neben `var2` und `var1` ja auch noch `ed_fct` enthält:\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1$compl_m4 <- dat1 %>% select(var1,var2,ed_fct) %>% complete.cases(.)\n```\n:::\n\n\nSo sieht das dann im Datensatz aus:\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id var1 var2 educ gend  x ed_fct compl_m1 compl_m4\n1  1    2    2    3    2  2   high     TRUE     TRUE\n2  2    1    2    1    1  1  basic     TRUE     TRUE\n3  3    2    1    2    1  2 medium     TRUE     TRUE\n4  4    5    9    2    2  4 medium     TRUE     TRUE\n5  5    7    7    1    1  1  basic     TRUE     TRUE\n6  6    8    4    3    2 NA   high     TRUE     TRUE\n7  7    9   25    2    1 NA medium     TRUE     TRUE\n8  8    5    3   -1    2 NA   <NA>     TRUE    FALSE\n```\n:::\n:::\n\n\n\n\n\n### Fälle mit missings finden\nJetzt können wir nach diesen Variablen filtern und uns diese Fälle genauer ansehen. Dazu filtern wir nach den Fällen, die zwar in `m1` enthalten (also `compl_m1` = `TRUE`) sind, aber nicht in `m4` (`compl_m4` = `FALSE`):\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1 %>% filter(compl_m1 == T & compl_m4 == F) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id var1 var2 educ gend  x ed_fct compl_m1 compl_m4\n1  8    5    3   -1    2 NA   <NA>     TRUE    FALSE\n```\n:::\n:::\n\n\n### Modelle nur mit vollständigen Fällen berechnen\nAußerdem können wir jetzt auch das Modell `m1` so erstellen, dass wir nur die Fälle miteinbeziehen, die auch in Modell2 berücksichtigt werden:\n\n::: {.cell}\n\n```{.r .cell-code}\nm1_m4vars <- lm(var2 ~ var1     , data = filter(dat1,compl_m4 == T))\nmodelsummary(list(\"m1\"=m1,\"m1 mit m4vars\"=m1_m4vars,\"m4\"=m4),gof_omit = \"IC|RM|Log|F\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:center;\"> m1 </th>\n   <th style=\"text-align:center;\">  m1 mit m4vars </th>\n   <th style=\"text-align:center;\">  m4 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:center;\"> -2.340 </td>\n   <td style=\"text-align:center;\"> -1.832 </td>\n   <td style=\"text-align:center;\"> -2.511 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (4.345) </td>\n   <td style=\"text-align:center;\"> (4.646) </td>\n   <td style=\"text-align:center;\"> (5.681) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> var1 </td>\n   <td style=\"text-align:center;\"> 1.839 </td>\n   <td style=\"text-align:center;\"> 1.848 </td>\n   <td style=\"text-align:center;\"> 1.753 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (0.773) </td>\n   <td style=\"text-align:center;\"> (0.814) </td>\n   <td style=\"text-align:center;\"> (0.835) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ed_fctmedium </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> 4.830 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> (6.038) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ed_fcthigh </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> -3.253 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;box-shadow: 0px 1px\">  </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\">  </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\">  </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (6.554) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Num.Obs. </td>\n   <td style=\"text-align:center;\"> 8 </td>\n   <td style=\"text-align:center;\"> 7 </td>\n   <td style=\"text-align:center;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 </td>\n   <td style=\"text-align:center;\"> 0.486 </td>\n   <td style=\"text-align:center;\"> 0.508 </td>\n   <td style=\"text-align:center;\"> 0.700 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 Adj. </td>\n   <td style=\"text-align:center;\"> 0.400 </td>\n   <td style=\"text-align:center;\"> 0.409 </td>\n   <td style=\"text-align:center;\"> 0.400 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nJetzt haben wir also in `m1 mit m4vars` und `m4` die gleiche Fallzahl und können so die Ergebnisse direkt miteinander vergleichen.\n\n## Interaktionen {#inter}\n\nInteraktionen zwischen zwei Variablen können wir mit `*` berechnen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1$g_fct <- factor(dat1$gend,levels = 1:2,\n                     labels = c(\"women\",\"men\"))\nm5 <- lm(var2 ~ var1 * g_fct, dat1)\nsummary(m5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = var2 ~ var1 * g_fct, data = dat1)\n\nResiduals:\n      1       2       3       4       5       6       7       8 \n-1.5000  2.6145 -0.8827  4.5000 -7.3687 -1.5000  5.6369 -1.5000 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)  \n(Intercept)    -3.1117     4.7702  -0.652   0.5498  \nvar1            2.4972     0.8211   3.041   0.0384 *\ng_fctmen        5.9451     8.4973   0.700   0.5227  \nvar1:g_fctmen  -2.1639     1.5331  -1.411   0.2310  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.493 on 4 degrees of freedom\nMultiple R-squared:  0.7244,\tAdjusted R-squared:  0.5177 \nF-statistic: 3.504 on 3 and 4 DF,  p-value: 0.1286\n```\n:::\n:::\n\n\nInteraktionen sollten immer visualisiert werden.\nDafür ist [`{ggeffects}`](https://strengejacke.github.io/ggeffects/index.html) eine große Hilfe:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"ggeffects\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggeffects)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Paket 'ggeffects' wurde unter R Version 4.2.2 erstellt\n```\n:::\n\n```{.r .cell-code}\nggpredict(m5, terms = c(\"var1\",\"g_fct[women,men]\")) %>% plot()\n```\n\n::: {.cell-output-display}\n![](09_reg2_files/figure-html/unnamed-chunk-15-1.png){width=80% height=60%}\n:::\n\n```{.r .cell-code}\n# oder nebeneinander:\nggpredict(m5, terms = c(\"var1\",\"g_fct[women,men]\")) %>% plot(facet=TRUE)\n```\n\n::: {.cell-output-display}\n![](09_reg2_files/figure-html/unnamed-chunk-15-2.png){width=80% height=60%}\n:::\n:::\n\n\nWir können diese Darstellung mit den bekannten `{ggplot2}`-Befehlen verändern:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpredict(m5, terms = c(\"var1\",\"g_fct[women,men]\")) %>% plot() + \n  scale_color_manual(values = c(\"orange\",\"lightskyblue3\"),breaks = c(\"women\",\"men\"),labels=c(\"Frauen\",\"Männer\")) +\n  scale_fill_manual(values = c(\"orange\",\"lightskyblue3\"),breaks = c(\"women\",\"men\"),labels=c(\"Frauen\",\"Männer\")) +\n  labs(title = \"Vorhergesagte Werte für var2\",\n       color = \"Gender\",\n       x = \"Werte für var1\",\n       y = \"Vorhergesagte Werte für var1\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for colour is already present.\nAdding another scale for colour, which will replace the existing scale.\n```\n:::\n\n::: {.cell-output-display}\n![](09_reg2_files/figure-html/unnamed-chunk-16-1.png){width=60% height=60%}\n:::\n:::\n\n\n## Quadratische Terme & Polynome {#quad}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm6 <- lm(var2 ~ var1 + I(var1^2), dat1 %>% filter(id != 7))\nsummary(m6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = var2 ~ var1 + I(var1^2), data = dat1 %>% filter(id != \n    7))\n\nResiduals:\n      1       2       3       4       5       6       7 \n-0.5443  1.4334 -1.5443  3.2043  1.2713 -1.0248 -2.7957 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)\n(Intercept)  -1.8580     3.4066  -0.545    0.614\nvar1          2.6481     1.9083   1.388    0.238\nI(var1^2)    -0.2235     0.2110  -1.059    0.349\n\nResidual standard error: 2.524 on 4 degrees of freedom\nMultiple R-squared:  0.5099,\tAdjusted R-squared:  0.2648 \nF-statistic: 2.081 on 2 and 4 DF,  p-value: 0.2402\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggpredict(m6, terms = c(\"var1\")) %>% plot()\n```\n\n::: {.cell-output-display}\n![](09_reg2_files/figure-html/unnamed-chunk-19-1.png){width=60% height=60%}\n:::\n:::\n\n\n## Gewichtetes Regressionsmodell {#gew}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survey)\netb18 <- haven::read_dta(\"./data/BIBBBAuA_2018_suf1.0.dta\") \n\netb18_k9 <- etb18 %>% filter(F518_SUF < 99998, zpalter < 100)\nmodx <- lm(F518_SUF ~ zpalter + I(zpalter^2),data=etb18_k9)\n\netb18_weighted <- svydesign(id      = ~intnr,\n                            weights = ~gew2018,\n                            data    = etb18_k9)\n# family = gaussian() bekommen wir ein lineares Regressionsmodell, wie bei lm() - mit gewichtet\nsurvey_modx <- svyglm(F518_SUF ~ zpalter + I(zpalter^2), \n                    family = gaussian(), data = etb18,design = etb18_weighted)\n\nmodelsummary(list(\"lm()\"=modx,\"svyglm()\"= survey_modx),gof_omit = \"RM|IC|Log\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:center;\"> lm() </th>\n   <th style=\"text-align:center;\"> svyglm() </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:center;\"> 586.343 </td>\n   <td style=\"text-align:center;\"> 118.307 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (381.240) </td>\n   <td style=\"text-align:center;\"> (338.854) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> zpalter </td>\n   <td style=\"text-align:center;\"> 110.543 </td>\n   <td style=\"text-align:center;\"> 121.639 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (17.556) </td>\n   <td style=\"text-align:center;\"> (17.635) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> I(zpalter^2) </td>\n   <td style=\"text-align:center;\"> -0.959 </td>\n   <td style=\"text-align:center;\"> -1.116 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;box-shadow: 0px 1px\">  </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (0.194) </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (0.213) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Num.Obs. </td>\n   <td style=\"text-align:center;\"> 16543 </td>\n   <td style=\"text-align:center;\"> 16543 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 </td>\n   <td style=\"text-align:center;\"> 0.008 </td>\n   <td style=\"text-align:center;\"> 0.013 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 Adj. </td>\n   <td style=\"text-align:center;\"> 0.008 </td>\n   <td style=\"text-align:center;\"> 0.013 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> F </td>\n   <td style=\"text-align:center;\"> 64.956 </td>\n   <td style=\"text-align:center;\"> 109.810 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n<!-- ## Weitere Beispiele mit `starwars` -->\n\n<!-- Die folgenden Beispiele basieren vornehmlich auf dem `starwars`-Datensatz aus `{dplyr}`, hier ein kurzer Blick in die Daten: -->\n\n<!-- ```{r starwars} -->\n<!-- starwars %>% select(name,height,mass,hair_color,gender) -->\n<!-- ``` -->\n\n<!-- Unser Beispiel ist ein simples: der Zusammenhang zwischen Größe und Gewicht der Star Wars Helden: -->\n<!-- ```{r mod1} -->\n<!-- mod1 <- lm(mass ~ height, data = starwars) -->\n<!-- ``` -->\n\n\n## \"Robuste\" Standardfehler {#rbst}\n\n\nHäufig müssen die Standardfehler an Verstöße gegen die allgemeinen Annahmen (Homoskedastizität usw.) angepasst werden.\n\nDie gute Nachricht ist, dass R eine ganze Reihe an Möglichkeiten bietet, Standard-Fehler zu korrigieren.\nUnter anderem mit [{sandwich}](http://sandwich.r-forge.r-project.org/articles/sandwich.html) oder [{estimatr}](https://declaredesign.org/r/estimatr/articles/getting-started.html).\n\nEine sehr einfache Variante ist die Korrektur von Standardfehlern in `{modelsummary}`, die wir uns etwas genauer ansehen:\n\n\nWir können sog. *heteroskedasticity-consistent* (HC) \"robuste\" Standardfehler mit der `vcov`-Option `HC` in `modelsummary()` anfordern. \nDie Hilfe-Seite für `{modelsummary}` bietet eine [Liste mit allen Optionen](https://vincentarelbundock.github.io/modelsummary/articles/modelsummary.html#vcov).\n\nEine Option ist auch `stata`, um Ergebnisse aus Statas `, robust` zu replizieren. \n[Hier mehr](https://declaredesign.org/r/estimatr/articles/stata-wls-hat.html) zu den Hintergründen und Unterschieden.\n\nBasierend auf [den oben eingelesenen Daten](#gew) können wir folgendes Modell schätzen:\n\n::: {.cell}\n\n```{.r .cell-code}\nmod1 <- lm(F518_SUF ~ zpalter + I(zpalter^2),data=etb18_k9) \n\nlibrary(modelsummary)\nmodelsummary(list(mod1,mod1,mod1,mod1),vcov = c(\"classical\",\"HC\",\"HC2\",\"stata\"),gof_omit = \"RM|IC|Log\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:center;\">  (1) </th>\n   <th style=\"text-align:center;\">   (2) </th>\n   <th style=\"text-align:center;\">   (3) </th>\n   <th style=\"text-align:center;\">   (4) </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:center;\"> 586.343 </td>\n   <td style=\"text-align:center;\"> 586.343 </td>\n   <td style=\"text-align:center;\"> 586.343 </td>\n   <td style=\"text-align:center;\"> 586.343 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (381.240) </td>\n   <td style=\"text-align:center;\"> (373.854) </td>\n   <td style=\"text-align:center;\"> (373.717) </td>\n   <td style=\"text-align:center;\"> (373.614) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> zpalter </td>\n   <td style=\"text-align:center;\"> 110.543 </td>\n   <td style=\"text-align:center;\"> 110.543 </td>\n   <td style=\"text-align:center;\"> 110.543 </td>\n   <td style=\"text-align:center;\"> 110.543 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (17.556) </td>\n   <td style=\"text-align:center;\"> (18.052) </td>\n   <td style=\"text-align:center;\"> (18.045) </td>\n   <td style=\"text-align:center;\"> (18.040) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> I(zpalter^2) </td>\n   <td style=\"text-align:center;\"> -0.959 </td>\n   <td style=\"text-align:center;\"> -0.959 </td>\n   <td style=\"text-align:center;\"> -0.959 </td>\n   <td style=\"text-align:center;\"> -0.959 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;box-shadow: 0px 1px\">  </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (0.194) </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (0.207) </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (0.207) </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (0.207) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Num.Obs. </td>\n   <td style=\"text-align:center;\"> 16543 </td>\n   <td style=\"text-align:center;\"> 16543 </td>\n   <td style=\"text-align:center;\"> 16543 </td>\n   <td style=\"text-align:center;\"> 16543 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 </td>\n   <td style=\"text-align:center;\"> 0.008 </td>\n   <td style=\"text-align:center;\"> 0.008 </td>\n   <td style=\"text-align:center;\"> 0.008 </td>\n   <td style=\"text-align:center;\"> 0.008 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 Adj. </td>\n   <td style=\"text-align:center;\"> 0.008 </td>\n   <td style=\"text-align:center;\"> 0.008 </td>\n   <td style=\"text-align:center;\"> 0.008 </td>\n   <td style=\"text-align:center;\"> 0.008 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> F </td>\n   <td style=\"text-align:center;\"> 64.956 </td>\n   <td style=\"text-align:center;\"> 82.649 </td>\n   <td style=\"text-align:center;\"> 82.622 </td>\n   <td style=\"text-align:center;\"> 82.634 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Std.Errors </td>\n   <td style=\"text-align:center;\"> IID </td>\n   <td style=\"text-align:center;\"> HC </td>\n   <td style=\"text-align:center;\"> HC2 </td>\n   <td style=\"text-align:center;\"> HC1 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Fixed effects Modelle mit `{fixest}` {#fe}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"fixest\")\n```\n:::\n\n\n[`{fixest}`](https://lrberge.github.io/fixest)) bietet eine große Auswahl an Möglichkeiten: [logistische FE-Modelle](#10_log_reg.qmd##feglm), mehr-dimensionale Fixed Effects, Multiway clustering, ...\nUnd es ist sehr schnell, [bspw. schneller](https://lrberge.github.io/fixest/#benchmarking) als Statas `reghdfe`. \nFür mehr Details empfiehlt sich die [Vignette](https://lrberge.github.io/fixest/articles/fixest_walkthrough.html).\n\nDie zentrale Funktion zur Schätzung linearer FE-Regressionsmodelle ist `feols()` - sie funktioniert ganz ähnlich zu `lm()`. \nAuch hier geben wir wieder eine Formel nach dem Schema `abhängige Variabe ~ unabhängige Variable(n)` an. \nWir fügen lediglich mit `|` die Variable hinzu, welche die FEs festlegt:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fixest)\nfe_mod1 <- feols(F518_SUF ~ zpalter + I(zpalter^2) | Bula, data = etb18_k9)\nfe_mod1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOLS estimation, Dep. Var.: F518_SUF\nObservations: 16,543 \nFixed-effects: Bula: 16\nStandard-errors: Clustered (Bula) \n               Estimate Std. Error  t value   Pr(>|t|)    \nzpalter      113.921974  14.227962  8.00691 8.5199e-07 ***\nI(zpalter^2)  -0.989909   0.154147 -6.42187 1.1494e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nRMSE: 3,509.1     Adj. R2: 0.014221\n                Within R2: 0.008179\n```\n:::\n:::\n\n\n`{fixest}` clustert automatisch die Standardfehler entlang der FE-Variable (hier also `Bula`).\nWenn wir das mal nicuth möchten, können wir mit der `se`-Option `= \"standard\"` ungeclusterte SE anfordern:\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fe_mod1, se = 'standard')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOLS estimation, Dep. Var.: F518_SUF\nObservations: 16,543 \nFixed-effects: Bula: 16\nStandard-errors: IID \n               Estimate Std. Error  t value   Pr(>|t|)    \nzpalter      113.921974  17.517746  6.50323 8.0867e-11 ***\nI(zpalter^2)  -0.989909   0.193688 -5.11085 3.2429e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nRMSE: 3,509.1     Adj. R2: 0.014221\n                Within R2: 0.008179\n```\n:::\n\n```{.r .cell-code}\nsummary(fe_mod1, cluster = ~Bula)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOLS estimation, Dep. Var.: F518_SUF\nObservations: 16,543 \nFixed-effects: Bula: 16\nStandard-errors: Clustered (Bula) \n               Estimate Std. Error  t value   Pr(>|t|)    \nzpalter      113.921974  14.227962  8.00691 8.5199e-07 ***\nI(zpalter^2)  -0.989909   0.154147 -6.42187 1.1494e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nRMSE: 3,509.1     Adj. R2: 0.014221\n                Within R2: 0.008179\n```\n:::\n:::\n\n\n`{modelsummary}` zeigt die geclusterten SE:\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelsummary(list(fe_mod1),gof_omit = \"R|IC|Log|F\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:center;\">  (1) </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> zpalter </td>\n   <td style=\"text-align:center;\"> 113.922 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (14.228) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> I(zpalter^2) </td>\n   <td style=\"text-align:center;\"> -0.990 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;box-shadow: 0px 1px\">  </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (0.154) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Num.Obs. </td>\n   <td style=\"text-align:center;\"> 16543 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Std.Errors </td>\n   <td style=\"text-align:center;\"> by: Bula </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Mehrebenenmodelle mit `{lme4}` {#mlvl}\n\n\nMit `lmer()` können wir ein Random Intercept Modell berechnen, indem wir mit `( 1 | Bula)` angeben, dass für `Bula` jeweils ein eigenes Random Intercept berechnet werden soll:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lme4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Paket 'lme4' wurde unter R Version 4.2.2 erstellt\n```\n:::\n\n```{.r .cell-code}\nml_m3 <- lmer(F518_SUF ~ zpalter + I(zpalter^2) + ( 1 | Bula), data=etb18_k9)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Some predictor variables are on very different scales: consider\nrescaling\n```\n:::\n\n```{.r .cell-code}\nmodelsummary(list(ml_m3),gof_omit = \"R|IC|Log|F\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:center;\">  (1) </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:center;\"> 387.675 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (392.748) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> zpalter </td>\n   <td style=\"text-align:center;\"> 113.680 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (17.516) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> I(zpalter^2) </td>\n   <td style=\"text-align:center;\"> -0.988 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (0.194) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SD (Intercept Bula) </td>\n   <td style=\"text-align:center;\"> 365.875 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;box-shadow: 0px 1px\"> SD (Observations) </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> 3511.032 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Num.Obs. </td>\n   <td style=\"text-align:center;\"> 16543 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nMehr zu Mehrebenenmodellen und `{lme4}` in Blogposts von [Rense Nieuwenhuis ](http://www.rensenieuwenhuis.nl/r-sessions-16-multilevel-model-specification-lme4/) und [Tristan Mahr](https://www.tjmahr.com/plotting-partial-pooling-in-mixed-effects-models/).\n\n\n<!-- ## Abschließende Bemerkungen -->\n\n<!-- Zusammengefasst lassen uns `{fixest}` und `{modelsummary}` Standardfehler nach der eigentlichen Modellschätzung anpassen, indem wir die  `se` or `cluster` Optionen verwenden.  -->\n\n<!-- Ein [Blog Post von Grant Mcdermott](https://grantmcdermott.com/better-way-adjust-SEs/) argumentiert noch etwas ausführlicher, warum die nachträgliche Berechnung der Standardfehler (anstelle einer kompletten Neuschätzung des Modells) eine gute Idee ist - auch wenn es für Stata-Nutzende ein sehr ungewöhnliches Vorgehen ist. -->\n\n<!-- Die exakte Replikation von Standardfehlern aus anderen Programmen (bspw, Stata) ist oft schwieriger als es zunächst scheint.  -->\n<!-- Siehe auch die Diskussion [hier](https://github.com/sgaure/lfe/issues/1#issuecomment-530643808)  -->\n<!-- [Detaillierte vignette](https://lrberge.github.io/fixest/articles/standard_errors.html) `{fixest}` wie SEs aus anderen Programmen repliziert werden können. -->\n<!-- [Detailliertes Paper](http://sandwich.r-forge.r-project.org/articles/jss_2020.html) von den Autoren von `{sandwich}` zu diesem Thema.  -->\n\n## Anhang: Predictions mit `marginaleffects` und \"manuelle\" Darstellung\n\nWir hatten im Kapitel [Interaktionen](#interaktionen) folgendes Modell geschätzt:\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(m5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = var2 ~ var1 * g_fct, data = dat1)\n\nResiduals:\n      1       2       3       4       5       6       7       8 \n-1.5000  2.6145 -0.8827  4.5000 -7.3687 -1.5000  5.6369 -1.5000 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)  \n(Intercept)    -3.1117     4.7702  -0.652   0.5498  \nvar1            2.4972     0.8211   3.041   0.0384 *\ng_fctmen        5.9451     8.4973   0.700   0.5227  \nvar1:g_fctmen  -2.1639     1.5331  -1.411   0.2310  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.493 on 4 degrees of freedom\nMultiple R-squared:  0.7244,\tAdjusted R-squared:  0.5177 \nF-statistic: 3.504 on 3 and 4 DF,  p-value: 0.1286\n```\n:::\n:::\n\n\nMit `predictions()` aus `{marginaleffects}` können wir basierend auf unserem Modell vorhergesagte Werte für bestimmte Werte berechnen.\nDazu geben wir die die gewünschten mit einem `expand.grid()` an.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Kombinationen aller Werte erstellen\nexpand.grid(var1 = 1:5, \n            g_fct =  c(\"women\",\"men\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   var1 g_fct\n1     1 women\n2     2 women\n3     3 women\n4     4 women\n5     5 women\n6     1   men\n7     2   men\n8     3   men\n9     4   men\n10    5   men\n```\n:::\n:::\n\n\nDiese Werte geben wir dann in `predictions()` als `newdata =` an:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(marginaleffects)\np <- predictions(m5, \n                 newdata = expand.grid(var1 = 1:5,\n                                       g_fct =  c(\"women\",\"men\")) )\n                 \nhead(data.frame(p))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  rowid   estimate std.error  statistic      p.value  conf.low conf.high var1\n1     1 -0.6145251  4.126052 -0.1489378 0.8816027065 -8.701438  7.472388    1\n2     2  1.8826816  3.555532  0.5295076 0.5964533448 -5.086034  8.851397    2\n3     3  4.3798883  3.099641  1.4130307 0.1576466975 -1.695297 10.455074    3\n4     4  6.8770950  2.814641  2.4433298 0.0145524331  1.360501 12.393689    4\n5     5  9.3743017  2.754104  3.4037579 0.0006646564  3.976358 14.772245    5\n6     6  3.1666667  5.861938  0.5402082 0.5890534765 -8.322520 14.655853    1\n  g_fct var2\n1 women    2\n2 women    2\n3 women    2\n4 women    2\n5 women    2\n6   men    2\n```\n:::\n:::\n\n\nFür den `ggplot()` verwenden wir dann `geom_line()` zusammen mit \n\n+ `geom_errorbar()` für eine Darstellung mit Konfidenzintervallen als Error Bars \n+ mit `geom_ribbon()` erhalten wir die Konfidenzintervalle als Konfidenzbänder (hier müssen wir mit `alpha = ` die Deckkraft der etwas heruntersetzen und die Farbe mit `fill=` angeben um den Bereich einzufärben). \n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\nggplot(data= data.frame(p),\n       aes(x = var1, \n           y =  estimate, \n           ymin = conf.low,ymax = conf.high,\n           color = g_fct)) + \n  geom_line() + \n  geom_errorbar(width = .1) +\n  scale_color_manual(values = c(\"orange\",\"lightskyblue3\"),breaks = c(\"women\",\"men\"),labels=c(\"Frauen\",\"Männer\")) +\n  labs(title = \"Vorhergesagte Werte für var2\",\n       color = \"Gender\",\n       x = \"Werte für var1\",\n       y = \"Vorhergesagte Werte für var1\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](09_reg2_files/figure-html/unnamed-chunk-26-1.png){width=3500}\n:::\n\n```{.r .cell-code}\nggplot(data= data.frame(p),\n       aes(x = var1, \n           y =  estimate, \n           ymin = conf.low,ymax = conf.high,\n           color = g_fct, fill = g_fct)) + \n  geom_line() + \n  geom_ribbon(alpha = .1, color = NA) +\n  scale_color_manual(values = c(\"orange\",\"lightskyblue3\"),breaks = c(\"women\",\"men\"),labels=c(\"Frauen\",\"Männer\")) +\n  scale_fill_manual(values = c(\"orange\",\"lightskyblue3\"),breaks = c(\"women\",\"men\"),labels=c(\"Frauen\",\"Männer\")) +\n  labs(title = \"Vorhergesagte Werte für var2\",\n       color = \"Gender\", fill = \"Gender\",\n       x = \"Werte für var1\",\n       y = \"Vorhergesagte Werte für var1\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](09_reg2_files/figure-html/unnamed-chunk-26-2.png){width=3500}\n:::\n:::\n",
    "supporting": [
      "09_reg2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}