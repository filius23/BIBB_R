{
  "hash": "3058a847ce80300e5afc24b2b5c29c56",
  "result": {
    "markdown": "# Data Wrangling III {#wrang3}\n\n\n\n\n\n\n## Datensätze verbinden\n\n> A mutating join allows you to combine variables from two tables. It first matches observations by their keys, then copies across variables from one table to the other.  \n[R for Data Science: Mutating joins](http://r4ds.had.co.nz/relational-data.html#mutating-joins)\n\n\nEin Überblick zu den wichtigsten Befehlen:[^tdyref]\n\n[^tdyref]: Illustrationen mit [tidyexplain](https://github.com/gadenbuie/tidyexplain)\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](11_data_wrangle3_files/figure-html/intial-dfs-1.png){fig-align='center' width=40%}\n:::\n:::\n\n\n<!-- <img src=\"pic/static/png/original-dfs.png\" width=\"480px\" /> -->\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n::: {layout-ncol=3}\n![](pic/inner-join.gif)\n\n![](pic/left-join-extra.gif)\n\n![](pic/full-join.gif) \n:::\n\nEs gibt natürlich auch [`right_join()`](https://dplyr.tidyverse.org/reference/mutate-joins.html)  oder [`anti_join()`](https://dplyr.tidyverse.org/reference/filter-joins.html). \nFür eine tiefergehende Einführung lohnt sich das Kapitel [Relational Data](https://r4ds.had.co.nz/relational-data.html#relational-data) aus [R for Data Science](https://r4ds.had.co.nz/).\n\n\nEine sehr hilfreiche Option in den `..._join()` ist die Verbindung unterschiedlicher Variablen.\nBspw. haben wir hier einige Fälle aus der ETB18 und \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\netb18_int_bl <- haven::read_dta(\"./data/BIBBBAuA_2018_suf1.0.dta\",\n                                col_select = c(\"intnr\",\"Bula\") # mit col_select() können Variablen ausgewählt werden\n                                )\n\netb_ids <-  etb18_int_bl %>% slice(c(1,125,1230,21010,8722) )\n\nset.seed(90459)\nalo_bula <- data.frame(bundesland = seq(1:8),\n                       Werte = sample(letters,size = 8) # mit sample() kann eine zufällige Auswahl getroffen werden \n                       )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\netb_ids\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 4 × 2\n#>     intnr Bula                    \n#>     <dbl> <dbl+lbl>               \n#> 1     260 11 [Berlin]             \n#> 2   30699  5 [Nordrhein-Westfalen]\n#> 3  209604  6 [Hessen]             \n#> 4 1540064  8 [Baden-Württemberg]\n```\n:::\n\n```{.r .cell-code}\nalo_bula\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>   bundesland Werte\n#> 1          1     g\n#> 2          2     m\n#> 3          3     n\n#> 4          4     z\n#> 5          5     w\n#> 6          6     r\n#> 7          7     t\n#> 8          8     h\n```\n:::\n\n```{.r .cell-code}\netb_ids %>% left_join(alo_bula,by = c(\"Bula\"=\"bundesland\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 4 × 3\n#>     intnr Bula                     Werte\n#>     <dbl> <dbl+lbl>                <chr>\n#> 1     260 11 [Berlin]              <NA> \n#> 2   30699  5 [Nordrhein-Westfalen] w    \n#> 3  209604  6 [Hessen]              r    \n#> 4 1540064  8 [Baden-Württemberg]   h\n```\n:::\n:::\n\n\nEin sehr hilfreiche Checkmöglichkeit, die ich häufig verwende:\nFür alle `Bula` in `etb_ids` findet sich eine Entsprechung in `alo$bundesland`:\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(etb_ids$Bula %in% alo_bula$bundesland)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> FALSE  TRUE \n#>     1     3\n```\n:::\n:::\n\n\n\n### [Übung](#join_ue)\n\n## Reshape: `pivot_longer()` & `pivot_wider()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbsp_df <- \n  data.frame(\n    bula    = c(\"NRW\",\"NDS\"),\n    alo2018 = c(2,2),\n    alo2017 = c(1,1)\n    )\n\nbsp_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>   bula alo2018 alo2017\n#> 1  NRW       2       1\n#> 2  NDS       2       1\n```\n:::\n:::\n\n\nMit `pivot_longer()` können wir aus einem wide shape `data.frame` einen long shape machen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbsp_df %>% pivot_longer(cols = c(\"alo2018\",\"alo2017\"),names_to = \"year\",values_to = \"alo\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 4 × 3\n#>   bula  year      alo\n#>   <chr> <chr>   <dbl>\n#> 1 NRW   alo2018     2\n#> 2 NRW   alo2017     1\n#> 3 NDS   alo2018     2\n#> 4 NDS   alo2017     1\n```\n:::\n:::\n\n\nMit `names_prefix = \"alo\"` können wir das `alo` direkt löschen lassen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbsp_df %>% pivot_longer(cols = c(\"alo2018\",\"alo2017\"),names_to = \"year\",values_to = \"alo\",names_prefix = \"alo\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 4 × 3\n#>   bula  year    alo\n#>   <chr> <chr> <dbl>\n#> 1 NRW   2018      2\n#> 2 NRW   2017      1\n#> 3 NDS   2018      2\n#> 4 NDS   2017      1\n```\n:::\n:::\n\n\nMit `pivot_wider()` können wir den umgekehrten Weg gehen:\n\n::: {.cell}\n\n```{.r .cell-code}\nbsp_df2 <- \n  data.frame(land = c(\"NRW\",\"NDS\",\"NRW\",\"NDS\"),\n             alo = c(2.1,1.8,2.4,2.2),\n             alter = c(\"age_1825\",\"age_1825\",\"age_2630\",\"age_2630\"))\nbsp_df2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>   land alo    alter\n#> 1  NRW 2.1 age_1825\n#> 2  NDS 1.8 age_1825\n#> 3  NRW 2.4 age_2630\n#> 4  NDS 2.2 age_2630\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbsp_df2 %>% pivot_wider(names_from = alter,values_from = alo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 2 × 3\n#>   land  age_1825 age_2630\n#>   <chr>    <dbl>    <dbl>\n#> 1 NRW        2.1      2.4\n#> 2 NDS        1.8      2.2\n```\n:::\n:::\n\n\n\n\n\n\n\n\n\n## Übungen\n\n### Übung 1 {#join_ue}\nVerknüpfen Sie die ausgewählten Beobachtungen der ETB 2018 mit [Arbeitsmarktstatistiken](https://www.regionalstatistik.de/genesis//online?operation=table&code=AI008-1) von Destatis.\nLesen die ETB mit folgendem Befehl ein:\n\n::: {.cell}\n\n```{.r .cell-code}\netb_ue11 <- haven::read_dta(\"./data/BIBBBAuA_2018_suf1.0.dta\",\n                       col_select = c(\"intnr\",\"int_jahr\",\"Bula\")) %>% \n  slice(34:35,68:69,62,687,625,684,599:600)\netb_ue11\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 10 × 3\n#>     intnr int_jahr Bula                   \n#>     <dbl>    <dbl> <dbl+lbl>              \n#>  1   7045     2017 3 [Niedersachsen]      \n#>  2   7119     2017 3 [Niedersachsen]      \n#>  3  15443     2017 5 [Nordrhein-Westfalen]\n#>  4  15527     2017 5 [Nordrhein-Westfalen]\n#>  5  13619     2018 3 [Niedersachsen]      \n#>  6 104699     2018 3 [Niedersachsen]      \n#>  7  94148     2018 5 [Nordrhein-Westfalen]\n#>  8 103957     2018 5 [Nordrhein-Westfalen]\n#>  9  87426     2017 1 [Schleswig-Holstein] \n#> 10  87648     2017 6 [Hessen]\n```\n:::\n:::\n\n\nSo können Sie die aufbereiteten Arbeitslosendaten einlesen (die Zahlencodes in beiden Datensätzen stimmen überein):\n\n::: {.cell}\n\n```{.r .cell-code}\nalo <- readRDS(file = \"./data/alo_bula1.Rdata\")\nalo\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 2 × 3\n#>     ags name                aloquote\n#>   <dbl> <chr>               <chr>   \n#> 1     3 Niedersachsen       5.8     \n#> 2     5 Nordrhein-Westfalen 7.4\n```\n:::\n:::\n\n\nWie müssten Sie vorgehen, wenn Sie nun jahresgenaue Angaben haben und dementsprechend zusätzlich auch nach dem Jahr mergen möchten?\n\n::: {.cell}\n\n```{.r .cell-code}\nalo_j <- readRDS(file = \"./data/alo_bula1_jahr.Rdata\")\nalo_j\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 4 × 4\n#>     ags name                aloquote  jahr\n#>   <dbl> <chr>               <chr>    <dbl>\n#> 1     3 Niedersachsen       5.8       2017\n#> 2     5 Nordrhein-Westfalen 7.4       2017\n#> 3     3 Niedersachsen       5.3       2018\n#> 4     5 Nordrhein-Westfalen 6.8       2018\n```\n:::\n:::\n\n\n\n\n### Übung 2 {#pivot_ue}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalo_wide <- readRDS(file = \"./data/alo_bula2.Rdata\")\nalo_wide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 2 × 4\n#>   ags   name                alo_2017 alo_2018\n#>   <chr> <chr>               <chr>    <chr>   \n#> 1 03    Niedersachsen       5.8      5.3     \n#> 2 05    Nordrhein-Westfalen 7.4      6.8\n```\n:::\n:::\n\n\nBringen Sie `alo_wide` in das long shape:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 4 × 4\n#>   ags   name                jahr  alo_quote\n#>   <chr> <chr>               <chr> <chr>    \n#> 1 03    Niedersachsen       2017  5.8      \n#> 2 03    Niedersachsen       2018  5.3      \n#> 3 05    Nordrhein-Westfalen 2017  7.4      \n#> 4 05    Nordrhein-Westfalen 2018  6.8\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}