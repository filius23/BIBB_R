{
  "hash": "92c47298dd3513a5af0e512af4d78e61",
  "result": {
    "markdown": "# Schleifen & Funktionen\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\netb_k12 <-  haven::read_dta(\"./data/BIBBBAuA_2018_suf1.0.dta\",\n                         col_select = c(\"S1\",\"F518_SUF\",\"m1202\",\"az\",\"zpalter\",\"F1605e\",\"Bula\")) %>% \n  filter(F518_SUF < 99998, m1202 %in% 1:4, zpalter < 9999 ) %>% \n  mutate(m1202_fct = factor(m1202, levels = 1:4, labels = c(\"ohne\",\"dual/schul.\",\"Aufst.\",\"FH/Uni\")),\n         S1_fct = factor(S1,levels = 1:2,labels =c(\"m\",\"w\")))\n```\n:::\n\n\nSchleifen im Sinne von `for()`-Loops werden in R selten verwendet. \nStattdessen werden meist Funktionen `function(...)` mit Hilfe von `map()` aus `{purrr}`/`{tidyverse}` [^lapply] über eine Reihe von Werten geschleift.\n\n[^lapply]: in base R gibt es `lapply()`, das ungefähr das gleiche macht.\n\nDie grundlegende Idee ist zunächst die gleiche wie bei klassischen `for()`-Loops: \n\n1. wir legen fest, was gemacht werden soll (in einer `function()`)\n2. wir erstellen eine Serie an Werten\n3. und wenden die `function()` auf diese an\n\nGrundsätzlich können wir in R solche Schleife auf wirklich alles anwenden: `data.frames()`, Vektoren, `list`s.\nDas macht das Vorgehen sehr flexibel und kann uns beispielsweise helfen, eine Modellserie zu erstellen. \n\n\n## Verschiedene Modelle auf die gleichen Daten als `function()` mit `map()` anwenden\n\nWir möchten folgende Modelle alls auf Basis der ETB2018 schätzen:\n\n+ Modell 1 = `F518_SUF ~ az`\n+ Modell 2 = `F518_SUF ~ az + S1_fct`\n+ Modell 3 = `F518_SUF ~ az + S1_fct + m1202_fct`\n+ Modell 4 = `F518_SUF ~ az + S1_fct + m1202_fct + zpalter`\n\nNatürlich würde so etwas funktionieren, würde aber vier separate Modelle erstellen:\n\n::: {.cell}\n\n```{.r .cell-code}\nmod1 <- lm(F518_SUF ~ az, data = etb_k12)\nmod2 <- lm(F518_SUF ~ az + S1, data = etb_k12)\nmod3 <- lm(F518_SUF ~ az + S1 + m1202, data = etb_k12)\nmod4 <- lm(F518_SUF ~ az + S1 + m1202 + zpalter, data = etb_k12)\n```\n:::\n\n\nWir definieren dann eine `function()`, in der wir angeben, dass das angegebene Argument die Formel für ein `lm()` sein soll - das Ergebnis dieses `lm()` lassen wir uns dann ausgeben.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_function <- function(modx){\n  mx <- lm(formula = modx,data = etb_k12)\n  return(mx) \n}\n```\n:::\n\n\nAls Test können wir `mod_function()` jetzt einmal verwenden:\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_function(\"F518_SUF ~ az\") %>% summary() # sieht gut aus\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = modx, data = etb_k12)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-10480  -1213   -411    504  67266 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -371.260     89.299  -4.157 3.23e-05 ***\naz           102.097      2.234  45.711  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3334 on 16519 degrees of freedom\nMultiple R-squared:  0.1123,\tAdjusted R-squared:  0.1122 \nF-statistic:  2090 on 1 and 16519 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n\nIm nächsten Schritt erstellen wir jetzt einen Vektor mit verschiedenen Modellvarianten:\n\n::: {.cell}\n\n```{.r .cell-code}\nmdls <- c(\n  \"Modell 1\" = \"F518_SUF ~ az\",\n  \"Modell 2\" = \"F518_SUF ~ az + S1_fct\",\n  \"Modell 3\" = \"F518_SUF ~ az + S1_fct + m1202_fct\",\n  \"Modell 4\" = \"F518_SUF ~ az + S1_fct + m1202_fct + zpalter\"\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmdls\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                      Modell 1 \n                               \"F518_SUF ~ az\" \n                                      Modell 2 \n                      \"F518_SUF ~ az + S1_fct\" \n                                      Modell 3 \n          \"F518_SUF ~ az + S1_fct + m1202_fct\" \n                                      Modell 4 \n\"F518_SUF ~ az + S1_fct + m1202_fct + zpalter\" \n```\n:::\n:::\n\nMit `map` wenden wir unsere `mod_function` jetzt auf den Modell-Vektor an:\n\n::: {.cell}\n\n```{.r .cell-code}\nmods <- map(mdls,mod_function)\nmods$`Modell 1`\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = modx, data = etb_k12)\n\nCoefficients:\n(Intercept)           az  \n     -371.3        102.1  \n```\n:::\n\n```{.r .cell-code}\nmods$`Modell 2`\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = modx, data = etb_k12)\n\nCoefficients:\n(Intercept)           az      S1_fctw  \n     359.51        91.73      -683.55  \n```\n:::\n:::\n\n\nAußerdem können wir uns alle Modelle auch direkt in `modelsummary` ausgeben lassen:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(modelsummary)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Paket 'modelsummary' wurde unter R Version 4.2.2 erstellt\n```\n:::\n\n```{.r .cell-code}\nmodelsummary(mods,stars = T,gof_omit = \"IC|RM|Log\",output = \"flextable\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"tabwid\"><style>.cl-98475ffa{}.cl-983bf34a{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-98406650{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-9840819e{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-984081a8{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-984081b2{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-984081b3{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-984081b4{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-98475ffa'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-9840819e\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"> </span></p></th><th class=\"cl-9840819e\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">Modell 1</span></p></th><th class=\"cl-9840819e\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">Modell 2</span></p></th><th class=\"cl-9840819e\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">Modell 3</span></p></th><th class=\"cl-9840819e\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">Modell 4</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(Intercept)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">-371.260***</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">359.515***</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">-376.956**</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">-1447.389***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(89.299)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(106.687)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(140.995)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(168.230)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">az</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">102.097***</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">91.733***</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">83.459***</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">84.050***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(2.234)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(2.376)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(2.323)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(2.315)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">S1_fctw</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">-683.549***</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">-725.557***</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">-755.562***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(55.184)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(53.640)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(53.490)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">m1202_fctdual/schul.</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">384.063***</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">261.336*</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(114.479)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(114.515)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">m1202_fctAufst.</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">898.222***</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">736.807***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(137.668)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(137.828)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">m1202_fctFH/Uni</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">2074.480***</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">1932.662***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(115.946)</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(116.133)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">zpalter</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">25.414***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\"></span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">(2.199)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081b2\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">Num.Obs.</span></p></td><td class=\"cl-984081b2\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">16521</span></p></td><td class=\"cl-984081b2\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">16521</span></p></td><td class=\"cl-984081b2\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">16521</span></p></td><td class=\"cl-984081b2\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">16521</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">R2</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">0.112</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">0.120</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">0.174</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">0.181</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">R2 Adj.</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">0.112</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">0.120</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">0.174</span></p></td><td class=\"cl-984081a8\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">0.180</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-984081b3\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">F</span></p></td><td class=\"cl-984081b3\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">2089.519</span></p></td><td class=\"cl-984081b3\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">1131.116</span></p></td><td class=\"cl-984081b3\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">696.152</span></p></td><td class=\"cl-984081b3\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">607.040</span></p></td></tr></tbody><tfoot><tr style=\"overflow-wrap:break-word;\"><td  colspan=\"5\"class=\"cl-984081b4\"><p class=\"cl-98406650\"><span class=\"cl-983bf34a\">+ p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001</span></p></td></tr></tfoot></table></div>\n```\n:::\n:::\n\n\n\n### [Übung](#ue12_01) {#manymod}\n\n## Das gleiche Modell auf verschiedene Datensets anwenden\n\nDer zweite Fall ist das gleiche Modell auf verschiedene Datensätze anzuwenden - wer kennt es nicht: \n\n> *\"Habt ihr das auch mal getrennt für Ost/West gerechnet?\"*\n\n\n...dafür hilft uns `nest(.by =)` - damit können wir den Datensatz entlang einer Variable splitten und zusammenfassen:\n\n::: {.cell}\n\n```{.r .cell-code}\netb_k12_ow <- \n  etb_k12 %>%\n      mutate(east = ifelse(Bula > 10,\"east\",\"west\")) %>% # Berlin = east\n      nest(.by=east)\n\netb_k12_ow\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  east  data                 \n  <chr> <list>               \n1 east  <tibble [3,438 × 9]> \n2 west  <tibble [13,083 × 9]>\n```\n:::\n:::\n\nIn der Spalte `data` sind jetzt also die Datensätze für Ost und West enthalten:\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(etb_k12_ow$data[[1]],n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 9\n     az zpalter   Bula        S1          F518_…¹ F1605e  m1202   m1202…² S1_fct\n  <dbl> <dbl+lbl> <dbl+lbl>   <dbl+lbl>   <dbl+l> <dbl+l> <dbl+l> <fct>   <fct> \n1    30 51        11 [Berlin] 2 [weiblic… 1200    1 [ja]  2 [dua… dual/s… w     \n2    40 49        11 [Berlin] 1 [männlic… 3500    2 [nei… 4 [Fac… FH/Uni  m     \n3    40 63        11 [Berlin] 2 [weiblic… 4500    1 [ja]  4 [Fac… FH/Uni  w     \n# … with abbreviated variable names ¹​F518_SUF, ²​m1202_fct\n```\n:::\n\n```{.r .cell-code}\nhead(etb_k12_ow$data[[2]],n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 9\n     az zpalter   Bula           S1      F518_…¹ F1605e   m1202   m1202…² S1_fct\n  <dbl> <dbl+lbl> <dbl+lbl>      <dbl+l> <dbl+l> <dbl+lb> <dbl+l> <fct>   <fct> \n1    40 24        1 [Schleswig-… 1 [män… 2500     2 [nei… 2 [dua… dual/s… m     \n2    30 53        1 [Schleswig-… 2 [wei… 3500     1 [ja]  4 [Fac… FH/Uni  w     \n3    45 29        1 [Schleswig-… 1 [män… 2740    NA       2 [dua… dual/s… m     \n# … with abbreviated variable names ¹​F518_SUF, ²​m1202_fct\n```\n:::\n:::\n\n\nAuf den so gesplitteten Datensatz können wir mit `map()` ein `lm()`-Modell anwenden:\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_ow <- \n  etb_k12 %>%\n    mutate(east = ifelse(Bula > 10,\"east\",\"west\")) %>% # Berlin = east\n    nest(.by = east) %>% \n    mutate(model = map(data, function(data) {\n      lm(\"F518_SUF ~ az + m1202_fct + zpalter + S1_fct\", data = data) # ad-hoc function --> siehe tip)\n    })) \n```\n:::\n\n\n::: {.callout-tip collapse=\"true\"} \n# adhoc `function` \n\nWir können die Funktion auch im gleichen Zug wie `map()` definieren, indem wir einfach mit `{}` die `function()` anhängen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap(input, function(x) {\n  ... # letzter Schritt in function wird das Ergebnis ausgegeben\n})\n```\n:::\n\n\n:::\n\nDas Ergebnis ist ein `data.frame`/`tibble`, welcher in der Spalte `model` die `lm`-Objekte enthält:\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_ow\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  east  data                  model \n  <chr> <list>                <list>\n1 east  <tibble [3,438 × 9]>  <lm>  \n2 west  <tibble [13,083 × 9]> <lm>  \n```\n:::\n\n```{.r .cell-code}\nmod_ow$model[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n\nCall:\nlm(formula = \"F518_SUF ~ az + m1202_fct + zpalter + S1_fct\", \n    data = data)\n\nCoefficients:\n         (Intercept)                    az  m1202_fctdual/schul.  \n             -509.07                 71.90               -345.51  \n     m1202_fctAufst.       m1202_fctFH/Uni               zpalter  \n              -75.82               1294.03                 12.27  \n             S1_fctw  \n             -399.58  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelsummary::modelplot(mod_ow$model,coef_omit = \"Intercept\") +\n  geom_vline(aes(xintercept = 0), linetype = 2, alpha = .5) +\n  scale_color_manual(values = c(\"orange\",\"navy\")) \n```\n\n::: {.cell-output-display}\n![](12_apply_loop_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelsummary(mod_ow$model,stars = T,gof_omit = \"IC|RM|Log\",output = \"flextable\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"tabwid\"><style>.cl-9926e13e{}.cl-991bed92{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-99203f32{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-992058b4{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-992058be{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-992058bf{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-992058c8{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-992058c9{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-9926e13e'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-992058b4\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\"> </span></p></th><th class=\"cl-992058b4\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(1)</span></p></th><th class=\"cl-992058b4\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(2)</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(Intercept)</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">-509.068</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">-1731.303***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\"></span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(380.613)</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(187.221)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">az</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">71.902***</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">88.157***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\"></span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(5.374)</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(2.562)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">m1202_fctdual/schul.</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">-345.508</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">425.407***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\"></span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(283.463)</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(124.716)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">m1202_fctAufst.</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">-75.817</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">936.694***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\"></span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(329.344)</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(151.324)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">m1202_fctFH/Uni</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">1294.027***</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">2097.328***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\"></span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(287.443)</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(126.477)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">zpalter</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">12.272**</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">28.938***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\"></span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(4.720)</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(2.468)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">S1_fctw</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">-399.585***</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">-830.732***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\"></span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(110.121)</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">(60.787)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058bf\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">Num.Obs.</span></p></td><td class=\"cl-992058bf\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">3438</span></p></td><td class=\"cl-992058bf\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">13083</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">R2</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">0.124</span></p></td><td class=\"cl-992058be\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">0.201</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-992058c8\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">R2 Adj.</span></p></td><td class=\"cl-992058c8\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">0.122</span></p></td><td class=\"cl-992058c8\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">0.201</span></p></td></tr></tbody><tfoot><tr style=\"overflow-wrap:break-word;\"><td  colspan=\"3\"class=\"cl-992058c9\"><p class=\"cl-99203f32\"><span class=\"cl-991bed92\">+ p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001</span></p></td></tr></tfoot></table></div>\n```\n:::\n:::\n\n\n### [Übung](#ue12_02) {#manydata}\n\n## `if` und mehrere Argumente in `function()`\n\nWir können unsere `function()` auch weitere Argumente aufnehmen und auch `if`-Statements[^else] einbauen. \n\n[^else]: auch `else` ist möglich\n\nWir könnten beispielsweise noch einen zusätzlichen Schritt in unsere Modell-`function()` einbauen, welcher `tidy()` auf das Modell anwendet und eine vereinfachte Regressionstabelle als `data.frame` erstellt.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_function2 <- function(modx){\n  mx <- lm(formula = modx,data = etb_k12)\n  mx <- tidy(mx,conf.int = T)\n  return(mx)\n}\nmod_function2(\"F518_SUF ~ az\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 7\n  term        estimate std.error statistic   p.value conf.low conf.high\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept)    -371.     89.3      -4.16 0.0000323   -546.      -196.\n2 az              102.      2.23     45.7  0             97.7      106.\n```\n:::\n:::\n\nWenn wir jetzt über ein zweites Argument bestimmen wollen, ob der Schritt mit `tidy()` ausgeführt werden soll, hilft uns ein zweites Argument in `function()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_function3 <- function(modx, dotidy){\n  mx <- lm(formula = modx,data = etb_k12)\n  if(dotidy == T) mx <- tidy(mx,conf.int = T)\n  return(mx)\n}\nmod_function3(\"F518_SUF ~ az\",dotidy=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 7\n  term        estimate std.error statistic   p.value conf.low conf.high\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept)    -371.     89.3      -4.16 0.0000323   -546.      -196.\n2 az              102.      2.23     45.7  0             97.7      106.\n```\n:::\n\n```{.r .cell-code}\nmod_function3(\"F518_SUF ~ az\",dotidy=F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = modx, data = etb_k12)\n\nCoefficients:\n(Intercept)           az  \n     -371.3        102.1  \n```\n:::\n:::\n\n\n\nWenn wir einen Standardwert für ein Argument vergeben möchten, dann können wir das mit `=` angeben.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_function4 <- function(modx, dotidy = T){\n  mx <- lm(formula = modx,data = etb_k12)\n  if(dotidy == T) mx <- tidy(mx,conf.int = T)\n  return(mx)\n}\nmod_function4(\"F518_SUF ~ az\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 7\n  term        estimate std.error statistic   p.value conf.low conf.high\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept)    -371.     89.3      -4.16 0.0000323   -546.      -196.\n2 az              102.      2.23     45.7  0             97.7      106.\n```\n:::\n\n```{.r .cell-code}\nmod_function4(\"F518_SUF ~ az\",dotidy=F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = modx, data = etb_k12)\n\nCoefficients:\n(Intercept)           az  \n     -371.3        102.1  \n```\n:::\n:::\n\n\n\n\n<!-- ## List zu `data.frame` -->\n\n\n\n<!-- Wenn die Einzelbestandteile einer `list` in einen `data.frame` umwandeln, können wir die `data.frame`s mit `bind_rows()` diese zu einem `data.frame` zusammenfügen. -->\n<!-- Mit `.id=\"\"` können wir eine Variable erstellen, welche die Listennamen enthält: -->\n<!-- ```{r} -->\n<!-- mod_l4 <- map(mdls,mod_function4) -->\n<!-- mod_l4$`Modell 1` -->\n<!-- map(mod_l4,class) -->\n<!-- ``` -->\n\n\n<!-- ```{r} -->\n<!-- #| eval: false -->\n<!-- bind_rows(mod_l4,.id=\"Mod_name\") -->\n<!-- # oder in einem Schritt: -->\n<!-- map(mdls,mod_function4) %>% bind_rows(.id=\"Mod_name\") -->\n<!-- # mit map_dfr() aus {purrr} in einem Schritt -->\n<!-- map_dfr(mdls,mod_function4,.id=\"Mod_name\") -->\n<!-- ``` -->\n\n\n<!-- ```{r} -->\n<!-- #| echo: false -->\n<!-- bind_rows(mod_l4,.id=\"Mod_name\") %>%  -->\n<!--   rmarkdown::paged_table() -->\n<!-- ``` -->\n\n\n\n## Übungen\n\n\n### Übung 1 {#manymod}\n\n::: {.cell}\n\n```{.r .cell-code}\netb_ue12 <- \n  haven::read_dta(\"./data/BIBBBAuA_2018_suf1.0.dta\",\n                  col_select = c(\"S1\",\"F518_SUF\",\"m1202\",\"az\",\"zpalter\",\"F1605e\")) %>% \n  filter(F518_SUF < 99998, m1202 %in% 1:4, zpalter < 9999 ) %>%  # missings raus\n  mutate(m1202_fct = factor(m1202, levels = 1:4, labels = c(\"ohne\",\"dual/schul.\",\"Aufst.\",\"FH/Uni\")),\n         S1_fct = factor(S1,levels = 1:2,labels =c(\"m\",\"w\"))) %>% # factor setzen\n  haven::zap_labels() %>%  # labels rauswerfen um Probleme zu vermeiden\n  haven::zap_label()\n```\n:::\n\n\n+ Erstellen Sie eine Funktion, welche den `data.frame` `etb_ue12` für ein `lm()` verwendet und als Input eine Modellformel verwendet. Testen Sie Ihre Funktion mit folgender Formel:   \n`az ~ S1 + ausb + zpalter` (Denken Sie daran, die Formula in `\"\"` zu setzen).\n\n+ Erstellen Sie eine Liste mit folgenden Modellen:\n    +  Modell 1 `\"az ~ S1\",`\n    +  Modell 2 `\"az ~ S1 + m1202_fct\",`\n    +  Modell 3 `\"az ~ S1 + m1202_fct + zpalter\"`\n\n+ Verwenden Sie `map()` und die erstellte Funktion, um die Modelle zu schätzen und in `modelsummary()` anzuzeigen\n\n[Zurück nach oben](#ue12_01)\n\n### Übung 2 {#manydata}\n\nBerechnen Sie das Modell `\"az ~ m1202_fct + zpalter + I(zpalter^2)\"` getrennt für Männer und Frauen `S1_fct`.\n\n[Zurück nach oben](#ue12_02)\n\n## [Mehr zu `map()`](https://hendrikvanb.gitlab.io/slides/purrr_beyond_map.html)\n\n##  Anhang \n\n### `.x` in `map()`\n\nIm `{tidyverse}` stellt das Paket `{purrr}` `map()` zur Verfügung, das `function(x) { ... x}` auf  `~` und `.x` abkürzen lässt:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmods <- map(mdls,~lm(formula = .x,data = etb_k12))\n```\n:::\n\n\nWer mehr über `{purrr}` und `map()` erfahren möchte, findet [hier](https://hendrikvanb.gitlab.io/slides/purrr_beyond_map.html#1) eine hervorragende Einführung. \n\n\n### weitere Beispiele für `function()`   \n\n#### alle Datensätze aus einem Verzeichnis einzulesen\n\n::: {.cell}\n\n```{.r .cell-code}\n# Namen aller csv-Dateien aus einem Verzeichnis\nfiles <- list.files(path = \"/pfad/...\", pattern = \".csv$\",full.names = T)\n\ndaten_list <- \n  map(files, function(x){\n    read.csv(x,header = T,sep = \";\")\n  })\n```\n:::\n\n\n#### Grafiken für unterschiedliche Jahre/Untergruppen zu erstellen\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\nplots_nach_Bula <- \n  map(1:16, function(bl){\n    plot_data <- etb_k12 %>% filter(Bula == bl) # daten für Bundesland auswählen\n    title_var <- as_factor(unique(plot_data$Bula)) # Titel aus Bula-Variable \n      # eigentlicher plot\n    plot_data %>% \n      ggplot(aes(x=az,y=F518_SUF, color = S1_fct)) +\n      geom_point(size = 1.5) +\n      scale_color_manual(values = c(\"darkkhaki\",\"deepskyblue3\")) + \n      labs(title = title_var, color = \"Geschlecht\") +\n      theme_minimal(base_size = 12)\n  })\n\nplots_nach_Bula[[3]]\n```\n\n::: {.cell-output-display}\n![](12_apply_loop_files/figure-html/unnamed-chunk-21-1.png){fig-align='center' width=55% height=45%}\n:::\n\n```{.r .cell-code}\nplots_nach_Bula[[12]]\n```\n\n::: {.cell-output-display}\n![](12_apply_loop_files/figure-html/unnamed-chunk-21-2.png){fig-align='center' width=55% height=45%}\n:::\n:::\n\n\n\n### Loop mit `for`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:8){\n  print(i)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n[1] 8\n```\n:::\n:::\n\n\n### loop über Variablen\n\nMöchten wir über Variablen loopen, müssen wir R explizit mitteilen, dass die mitgegebenen strings als Variablen zu verstehen sind: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(v in c(\"m1202_fct\",\"S1\",\"F1605e\")){\n  etb_k12 %>% count(v) %>% print()\n}\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `count()`:\n! Must group by variables found in `.data`.\n✖ Column `v` is not found.\n```\n:::\n:::\n\n\nDas können wir mit `!!rlang::sym(v)`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(v in c(\"m1202_fct\",\"S1\",\"F1605e\")){\n  etb_k12 %>% count(!!rlang::sym(v)) %>% print()\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  m1202_fct       n\n  <fct>       <int>\n1 ohne          886\n2 dual/schul.  7679\n3 Aufst.       1460\n4 FH/Uni       6496\n# A tibble: 2 × 2\n  S1               n\n  <dbl+lbl>    <int>\n1 1 [männlich]  8442\n2 2 [weiblich]  8079\n# A tibble: 4 × 2\n  F1605e                n\n  <dbl+lbl>         <int>\n1  1 [ja]            7104\n2  2 [nein]          3970\n3  9 [keine Angabe]    43\n4 NA                 5404\n```\n:::\n:::\n",
    "supporting": [
      "12_apply_loop_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/tabwid-1.1.3/tabwid.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}