{
  "hash": "c435b62add00905b4aac41260e0861cc",
  "result": {
    "markdown": "# Data Wrangling I: Labels {#wrang1}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\netb18_kap5 <- haven::read_dta(\"./data/BIBBBAuA_2018_suf1.0.dta\",\n                               col_select = c(\"intnr\", \"S1\", \"m1202\", \"Bula\",\"F411_01\",\"az\",\"zpalter\")) %>% \n  filter(F411_01<9, zpalter < 100)\n```\n:::\n\n\n\n## Labels aus anderen Programmen in R\n\nIn vielen Programmen wie Stata oder SPSS werden die labels häufig durch die Operationen \"mitgeschleift\" und dann ausgegeben. Das ist in R nicht der Fall. Stattdesssen können wir mit Hilfe des Variablentyps `factor` Labels vergeben. Das Vorgehen mag für alle, die schon lange mit Stata oder SPSS gearbeitet haben, etwas ungewöhnlich sein - ist aber in der Praxis sehr hilfreich, wenn man sich den entsprechenden Workflow angewöhnt hat.\n\nWenn wir bspw. die Ansicht mit `View()` öffnen oder eine Auszählung mit `count()` erstellen, werden uns labels angezeigt:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(etb18_kap5)\netb18_kap5 %>% count(S1)\n```\n:::\n\n\nDiese sind als `attributes()` Variablen zugeordnet:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(etb18_kap5$S1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$label\n[1] \"Geschlecht\"\n\n$format.stata\n[1] \"%8.0g\"\n\n$labels\nmännlich weiblich \n       1        2 \n\n$class\n[1] \"haven_labelled\" \"vctrs_vctr\"     \"double\"        \n```\n:::\n:::\n\n...leider machen die `attributes()` immer wieder Probleme:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(data = etb18_kap5, aes(x = zpalter, y = az, color = S1 )) + \n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDon't know how to automatically pick scale for object of type\n<haven_labelled/vctrs_vctr/double>. Defaulting to continuous.\nDon't know how to automatically pick scale for object of type\n<haven_labelled/vctrs_vctr/double>. Defaulting to continuous.\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in UseMethod(\"rescale\"): nicht anwendbare Methode für 'rescale' auf Objekt der Klasse \"c('haven_labelled', 'vctrs_vctr', 'double')\" angewendet\n```\n:::\n:::\n\nIn den beiden vorherigen Kapiteln haben wir schon gesehen, dass Labels in R immer etwas extra Aufwand bedeuten.\nIn Grafiken mussten wir mit `breaks = c(1,2), labels = c(\"Männer\", \"Frauen\")` die Labels extra erstellen.\n\nWie können wir die Labels `attributes()` verwenden und so Tipparbeit sparen?\n\n::: {.cell}\n\n:::\n\n\n`{haven}` enthält sich die Funktion `as_factor`[^2], mit der wir aus Labels direkt eine `factor`-Variable erstellen können:\n\n[^2]: Nicht zu verwechseln mit `as.factor()` aus base R - der `_` macht einen Unterschied!\n\n::: {.cell}\n\n```{.r .cell-code}\netb18_kap5$S1_fct <- as_factor(etb18_kap5$S1)\n\n# ansehen:\netb18_kap5 %>% select(contains(\"S1\")) %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  S1           S1_fct  \n  <dbl+lbl>    <fct>   \n1 1 [männlich] männlich\n2 2 [weiblich] weiblich\n3 1 [männlich] männlich\n4 2 [weiblich] weiblich\n5 2 [weiblich] weiblich\n6 1 [männlich] männlich\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = etb18_kap5, aes(x = zpalter, y = az, color = S1_fct )) + \n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDon't know how to automatically pick scale for object of type\n<haven_labelled/vctrs_vctr/double>. Defaulting to continuous.\n```\n:::\n\n::: {.cell-output-display}\n![](05_data_wrangle1_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## `factor` selbst erstellen oder bearbeiten\n\nFür `m1202` sind die Labels aber etwas lang:\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1 <- etb18_kap5 %>% count(m1202) %>% mutate(m1202_fct = as_factor(m1202))\ntab1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  m1202                                                             n m1202_fct \n  <dbl+lbl>                                                     <int> <fct>     \n1 -1 [keine Angabe]                                                44 keine Ang…\n2  1 [Ohne Berufsabschluss]                                      1071 Ohne Beru…\n3  2 [duale o. schulische Berufsausbildung/einf.,mittl. Beamte]  9209 duale o. …\n4  3 [Aufstiegsfortbildung (Meister, Techniker, kfm. AFB u.ä.)]  1711 Aufstiegs…\n5  4 [Fachhochschule, Universität/ geh., höhere Beamte]          7792 Fachhochs…\n```\n:::\n:::\n\nAlternativ können wir auch mit `factor()` und `levels` und `labels` selber labeln. Die `labels` werden dann der Reihenfolge nach den Zahlen aus `levels` zugewiesen. Außerdem wird aus allen nicht angegebenen `levels` automatisch `NA`:\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1$m1202_fct2 <- factor(tab1$m1202, \n                        levels = c(1,2,3,4), \n                        labels = c(\"ohne Abs.\", \"dual/schul.\", \"Aufstiegsfortb.\", \"FH/Uni\"))\ntab1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n  m1202                                                        n m1202…¹ m1202…²\n  <dbl+lbl>                                                <int> <fct>   <fct>  \n1 -1 [keine Angabe]                                           44 keine … <NA>   \n2  1 [Ohne Berufsabschluss]                                 1071 Ohne B… ohne A…\n3  2 [duale o. schulische Berufsausbildung/einf.,mittl. B…  9209 duale … dual/s…\n4  3 [Aufstiegsfortbildung (Meister, Techniker, kfm. AFB …  1711 Aufsti… Aufsti…\n5  4 [Fachhochschule, Universität/ geh., höhere Beamte]     7792 Fachho… FH/Uni \n# … with abbreviated variable names ¹​m1202_fct, ²​m1202_fct2\n```\n:::\n:::\n\n\n\n<!-- ```{r} -->\n<!-- #| echo: false -->\n<!-- theme_set(theme_gray(base_size = 15) + theme(axis.title.x = element_text(size = rel(1.15),face = \"bold\",family = \"mono\")))  -->\n<!-- ``` -->\n<!-- ```{r} -->\n<!-- #| out-height: 60% -->\n<!-- #| out-width: 60% -->\n<!-- #| fig-align: \"center\" -->\n<!-- #| layout-ncol: 2 -->\n<!-- tab1 %>%  -->\n<!--   ggplot(data = ., aes(y = m1202_fct, x = n)) + -->\n<!--   geom_col(position=position_dodge(), fill = \"sienna1\") + -->\n<!--   labs(y=\"\") -->\n\n<!-- tab1 %>%  -->\n<!--   ggplot(data = ., aes(y = m1202_fct2, x = n)) + -->\n<!--   geom_col(position=position_dodge(), fill = \"mediumturquoise\") + -->\n<!--   labs(y=\"\") -->\n<!-- ``` -->\n\n<!-- **[Blogbeitrag zu labels in R](https://www.pipinghotdata.com/posts/2022-09-13-the-case-for-variable-labels-in-r/)** -->\n\nOder wir nutzen die Funktionen aus `{forcats}` zur recodierung eines `factors`.\n`{forcats}` ist Teil des `{tidyverse}`.\nMit `fct_recode()` können wir die `levels` verändern:\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(tab1$m1202_fct)[3]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"duale o. schulische Berufsausbildung/einf.,mittl. Beamte\"\n```\n:::\n\n```{.r .cell-code}\ntab1$m1202_fct3 <- fct_recode(tab1$m1202_fct,\n  `duale / schulische Ausb.` = \"duale o. schulische Berufsausbildung/einf.,mittl. Beamte\", # bei Leerzeichen `` um die Wörter\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1 %>% select(m1202_fct,m1202_fct2,m1202_fct3)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"tabwid\"><style>.cl-50ceb894{}.cl-50c36700{font-family:'Azeret Mono';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-50c36714{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-50c7a5d6{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-50c7c476{width:4.073in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c480{width:1.262in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c48a{width:4.038in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c48b{width:4.073in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c494{width:1.262in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c495{width:4.038in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c49e{width:4.073in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c49f{width:1.262in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c4a8{width:4.038in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c4a9{width:4.073in;background-color:rgba(207, 255, 223, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c4b2{width:1.262in;background-color:rgba(207, 255, 223, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c4b3{width:4.038in;background-color:rgba(207, 255, 223, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c4bc{width:4.073in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c4bd{width:1.262in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-50c7c4be{width:4.038in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-50ceb894'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-50c7c476\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36700\">m1202_fct</span></p></th><th class=\"cl-50c7c480\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36700\">m1202_fct2</span></p></th><th class=\"cl-50c7c48a\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36700\">m1202_fct3</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-50c7c48b\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">keine Angabe</span></p></td><td class=\"cl-50c7c494\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\"></span></p></td><td class=\"cl-50c7c495\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">keine Angabe</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-50c7c49e\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">Ohne Berufsabschluss</span></p></td><td class=\"cl-50c7c49f\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">ohne Abs.</span></p></td><td class=\"cl-50c7c4a8\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">Ohne Berufsabschluss</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-50c7c4a9\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">duale o. schulische Berufsausbildung/einf.,mittl. Beamte</span></p></td><td class=\"cl-50c7c4b2\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">dual/schul.</span></p></td><td class=\"cl-50c7c4b3\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">duale / schulische Ausb.</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-50c7c4bc\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">Aufstiegsfortbildung (Meister, Techniker, kfm. AFB u.ä.)</span></p></td><td class=\"cl-50c7c4bd\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">Aufstiegsfortb.</span></p></td><td class=\"cl-50c7c4be\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">Aufstiegsfortbildung (Meister, Techniker, kfm. AFB u.ä.)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-50c7c4bc\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">Fachhochschule, Universität/ geh., höhere Beamte</span></p></td><td class=\"cl-50c7c4bd\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">FH/Uni</span></p></td><td class=\"cl-50c7c4be\"><p class=\"cl-50c7a5d6\"><span class=\"cl-50c36714\">Fachhochschule, Universität/ geh., höhere Beamte</span></p></td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n[Weitere `fct_....()` Funktionen aus `{forcats}`](#fct_cats), einen Überblick gibt das [Cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/factors.pdf).\n\n## Übung\n\n\n::: {.cell}\n\n```{.r .cell-code}\netb18_ue5 <- haven::read_dta(\"./data/BIBBBAuA_2018_suf1.0.dta\",\n                               col_select = c(\"intnr\", \"S1\", \"m1202\", \"Bula\",\"F411_01\")) %>% \n  filter(F411_01<9)\n```\n:::\n\n\nBearbeiten Sie die labels dieses Diagramms:\n\n**`F411_01`: Wie häufig kommt es vor, dass Sie unter starkem Termin- oder Leistungsdruck arbeiten?**\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> value </th>\n   <th style=\"text-align:left;\"> label </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> häufig </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> manchmal </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> selten </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:left;\"> nie </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ntab_ue5 <- \n  etb18_ue5 %>% \n  count(F411_01)\ntab_ue5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  F411_01          n\n  <dbl+lbl>    <int>\n1 1 [häufig]   10211\n2 2 [manchmal]  6827\n3 3 [selten]    2196\n4 4 [nie]        769\n```\n:::\n\n```{.r .cell-code  code-fold=\"show\"}\ntab_ue5 %>%\n  ggplot(data = ., aes(x = F411_01, y = n)) +\n  geom_col(fill = \"steelblue3\")\n```\n\n::: {.cell-output-display}\n![](05_data_wrangle1_files/figure-html/unnamed-chunk-15-1.png){width=50% height=50%}\n:::\n:::\n\n\n+ Erstellen Sie dafür zunächst einen `data.frame` mit der Auszählung durch `count()` und legen diese als Objekt ab.\n+ Wie können Sie die labels aus den `attributes()` mit `as_factor()` in eine Variable `F411_01_fct` übernehmen?\n+ Erstellen Sie einen `factor()` Variable `F411_01_fct2` mit den den gewünschten Beschriftungen mit Hilfe von `labels =`. (Sie können die Labels der Variable `F411_01` mit `attributes(etb18_kap5$F411_01)$labels` nachsehen.) \n+ Verwenden Sie die gelabelten Variablen für die Grafik.\n\n**Bonusübung:** Was müssten wir ändern, um die Grafik nach Geschlecht (`S1`) zu erstellen?\n\n## Anhang\n\n### Labels löschen mit `zap_...` aus `{haven}`\n\nHäufig führen die Label-`attributes()` zu Problemen in der weiteren Verarbeitung.\nMit `haven::zap_labels()` können wir die Value labels aus einem Datensatz löschen mit `haven::zap_label()` können wir die Variable labels entfernen.\n\n::: {.cell}\n\n```{.r .cell-code}\netb18_kap5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19,827 × 8\n   intnr    az zpalter   Bula        S1           F411_01      m1202      S1_fct\n   <dbl> <dbl> <dbl+lbl> <dbl+lbl>   <dbl+lbl>    <dbl+lbl>    <dbl+lbl>  <fct> \n 1   260    80 41        11 [Berlin] 1 [männlich] 1 [häufig]   4 [Fachho… männl…\n 2   361    30 51        11 [Berlin] 2 [weiblich] 2 [manchmal] 2 [duale … weibl…\n 3   491    40 49        11 [Berlin] 1 [männlich] 2 [manchmal] 4 [Fachho… männl…\n 4   690    40 63        11 [Berlin] 2 [weiblich] 2 [manchmal] 4 [Fachho… weibl…\n 5   919    39 41        11 [Berlin] 2 [weiblich] 2 [manchmal] 2 [duale … weibl…\n 6  1041    40 57        11 [Berlin] 1 [männlich] 1 [häufig]   2 [duale … männl…\n 7  1077    12 62        11 [Berlin] 1 [männlich] 2 [manchmal] 4 [Fachho… männl…\n 8  1306    30 59        11 [Berlin] 2 [weiblich] 3 [selten]   2 [duale … weibl…\n 9  1357    42 32        11 [Berlin] 2 [weiblich] 1 [häufig]   4 [Fachho… weibl…\n10  1488    48 62        11 [Berlin] 2 [weiblich] 1 [häufig]   4 [Fachho… weibl…\n# … with 19,817 more rows\n```\n:::\n\n```{.r .cell-code}\netb18_kap5 %>% \n  haven::zap_labels() # value labels raus\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19,827 × 8\n   intnr    az zpalter  Bula    S1 F411_01 m1202 S1_fct  \n   <dbl> <dbl>   <dbl> <dbl> <dbl>   <dbl> <dbl> <fct>   \n 1   260    80      41    11     1       1     4 männlich\n 2   361    30      51    11     2       2     2 weiblich\n 3   491    40      49    11     1       2     4 männlich\n 4   690    40      63    11     2       2     4 weiblich\n 5   919    39      41    11     2       2     2 weiblich\n 6  1041    40      57    11     1       1     2 männlich\n 7  1077    12      62    11     1       2     4 männlich\n 8  1306    30      59    11     2       3     2 weiblich\n 9  1357    42      32    11     2       1     4 weiblich\n10  1488    48      62    11     2       1     4 weiblich\n# … with 19,817 more rows\n```\n:::\n:::\n\n\n\n### Labels selbst erstellen und ranspielen\n\nEin alternativer Weg geht über einen kleinen Label-`data.frame` und `left_join()` (mehr zu `left_join()` später.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab2 <- etb18_kap5 %>% count(m1202)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlab_df <- data.frame(m1202=1:4)\nlab_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  m1202\n1     1\n2     2\n3     3\n4     4\n```\n:::\n\n```{.r .cell-code}\nlab_df$m1202_lab <- factor(lab_df$m1202,levels = 1:4,\n                           labels = c(\"ohne Abs.\", \"dual/schul.\", \"Aufstiegsfortb.\", \"FH/Uni\"))\nlab_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  m1202       m1202_lab\n1     1       ohne Abs.\n2     2     dual/schul.\n3     3 Aufstiegsfortb.\n4     4          FH/Uni\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntab2 %>% \n  left_join(lab_df,by = \"m1202\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  m1202                                                             n m1202_lab \n  <dbl+lbl>                                                     <int> <fct>     \n1 -1 [keine Angabe]                                                44 <NA>      \n2  1 [Ohne Berufsabschluss]                                      1071 ohne Abs. \n3  2 [duale o. schulische Berufsausbildung/einf.,mittl. Beamte]  9209 dual/schu…\n4  3 [Aufstiegsfortbildung (Meister, Techniker, kfm. AFB u.ä.)]  1711 Aufstiegs…\n5  4 [Fachhochschule, Universität/ geh., höhere Beamte]          7792 FH/Uni    \n```\n:::\n:::\n\nIn `ggplot()` geben wir dann `m1202_lab` an, um diese auf die x-Achse zu setzen:\n\n::: {.cell}\n\n```{.r .cell-code}\ntab2 %>% \n  left_join(lab_df,by = \"m1202\") %>% \n  ggplot(data = ., aes(x = m1202_lab, y = n)) +\n  geom_col(position=position_dodge(), fill = \"turquoise3\")\n```\n\n::: {.cell-output-display}\n![](05_data_wrangle1_files/figure-html/unnamed-chunk-20-1.png){width=80% height=50%}\n:::\n:::\n\n\n\n\n### Labels in R erstellen und nach bspw. Stata exportieren\nWenn wir aber beispielsweise einen Datensatz für Stata labeln wollen, hilft uns wieder `{labelled}`:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(labelled)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\netb18_kap5$S1_num2 <- as.numeric(etb18_kap5$S1)\nattributes(etb18_kap5$S1_num2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n\n```{.r .cell-code}\nval_labels(etb18_kap5$S1_num2) <- c(\"Mann\"=1,\"Frau\"=2)\nattributes(etb18_kap5$S1_num2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$labels\nMann Frau \n   1    2 \n\n$class\n[1] \"haven_labelled\" \"vctrs_vctr\"     \"double\"        \n```\n:::\n\n```{.r .cell-code}\netb18_kap5 %>% count(S1_num2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  S1_num2       n\n  <dbl+lbl> <int>\n1 1 [Mann]   9984\n2 2 [Frau]   9843\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\netb18_kap5 %>% \n  select(S1_num2) %>% \n  haven::write_dta(.,path = \"./data/etb18_kap5.dta\")\n```\n:::\n\n\n...in *Stata*:\n\n::: {.cell}\n\n```{.stata .cell-code}\nuse \"./data/etb18_kap5.dta\" \ntab S1_num2\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n    S1_num2 |      Freq.     Percent        Cum.\n------------+-----------------------------------\n       Mann |     10,068       50.33       50.33\n       Frau |      9,935       49.67      100.00\n------------+-----------------------------------\n      Total |     20,003      100.00\n```\n:::\n:::\n\n\n[Mehr zu `labels` in `{labelled}`](https://joseph.larmarange.net/intro_labelled.html).\n\n<!-- factors stellen eine strukturierte Beziehung zwischen den verschiedenen Ebenen (Werten) einer kategorialen Variable her, wie z. B. Wochentage oder Antworten auf eine Frage in einer Umfrage. Auf diese Weise lässt sich leichter erkennen, wie sich ein Element zu den anderen Elementen in einer Spalte verhält. Obwohl factors wie Zeichenvektoren aussehen (und sich oft auch so verhalten), werden sie von R als Ganzzahlvektoren behandelt. Sie müssen also sehr vorsichtig sein, wenn Sie sie als Strings behandeln. -->\n\n<!-- Einmal erstellt, können factors nur einen vordefinierten Satz von Werten enthalten, die als Ebenen bezeichnet werden. Standardmäßig sortiert R die Ebenen immer in alphabetischer Reihenfolge. Wenn Sie zum Beispiel einen Faktor mit 2 Ebenen haben: -->\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/tabwid-1.1.3/tabwid.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}